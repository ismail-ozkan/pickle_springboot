09.03.2024 01:18
şuanda kursun hibernate jpa crud yani 3. ana başlığında öğrendiğim bazı konuları implement etmeye başladım

notion da DB genel structure oluşturuldu ( ileri dönük bazı brainstorming durumları not edildi)

db bağlantısı sağlanıp doğrudan java kodu ile db table oluşturuldu(users)

properties de öğrendiğim özellikleri ekleyerek denedim

postman collection oluşturuldu

Actuator ile ilgili 3 endpoint denemesi yapıldı

bu haliyle github a atıldı
eklenecek her yeni şey ile ilgili bir branch açılıp ne yapıldı nasıl yapıldı takibi kolaylaştırılacak

eklenen özellik master ana branche merge edilecek

09.03.2024 23:14

EntityManager interface object ile çeşitli methodlar kullanılarak db den data manipulasyonu yapılmıştır.
entityManager.persist(), .find(), .merge(), .remove(), .createQuery(sql Query)
query.getResultList()

@Transactional anatasyonunu hangi methodlarda ihtiyaç olduğu -> CREATE UPDATE DELETE

bunlar app class içerisidne oluşturulan CommandLineRunner @Bean methodu ile run edilerek çalıştırılmıştır.

TODO SQL query pratik için fikir üretip uygulanacak, örneğin ad soyad birleştrime concat() gibi vs.

ID auto increment için özellik konulması
sql query:
ALTER TABLE student_tracker.student AUTO_INCREMENT=3000;

11.03.2024 23:26
yeni bir query uygulamasıyla casesenstive arama yapmaya ilişkin bir deneme yapıldı
query : SELECT firstName FROM Users WHERE BINARY(firstName) LIKE:queryPieceParam
şekilde parametreli olarak kullanıldı.

13.03.2024 01:13
update methodu eklenerek bir kullanıcı güncelleme yapıldlı
@Transactional anatasyonu kullanılmasıne ilişkin struggle handle edildi.